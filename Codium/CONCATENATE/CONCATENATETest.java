package CONCATENATE;


// Generated by CodiumAI

import org.junit.Test;
import static org.junit.Assert.*;

public class CONCATENATETest {


    // Given an array of strings with at least one element, concatenate() should return a string that is the concatenation of all the strings in the array
    @Test
    public void test_concatenate_withAtLeastOneElement() {
        String[] strings = {"Hello", "World"};
        String result = CONCATENATE.concatenate(strings);
        assertEquals("HelloWorld", result);
    }

    // Given an empty array of strings, concatenate() should return an empty string
    @Test
    public void test_concatenate_withEmptyArray() {
        String[] strings = {};
        String result = CONCATENATE.concatenate(strings);
        assertEquals("", result);
    }

    // Given an array of strings with a total length greater than Integer.MAX_VALUE, concatenate() should throw an OutOfMemoryError
/*     @Test
    public void test_concatenate_withTotalLengthGreaterThanIntegerMaxValue() {
        String[] strings = new String[Integer.MAX_VALUE / 2];
        for (int i = 0; i < strings.length; i++) {
            strings[i] = "a";
        }
        try {
            CONCATENATE.concatenate(strings);
            fail("Expected OutOfMemoryError");
        } catch (OutOfMemoryError e) {
            // Test passed
        }
    } */
}