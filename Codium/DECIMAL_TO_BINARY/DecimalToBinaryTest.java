package DECIMAL_TO_BINARY;


// Generated by CodiumAI

import org.junit.Test;
import static org.junit.Assert.*;

public class DecimalToBinaryTest {


    // should return binary representation of decimal number with 'db' prefix and suffix
    @Test
    public void test_decimal_to_binary() {
        String result = DECIMAL_TO_BINARY.decimal_to_binary(15);
        assertEquals("db1111db", result);
    
        result = DECIMAL_TO_BINARY.decimal_to_binary(32);
        assertEquals("db100000db", result);
    }

    // should return 'db1111111111111111111111111111111db' when given decimal 2147483647
    @Test
    public void test_max_decimal_value() {
        String result = DECIMAL_TO_BINARY.decimal_to_binary(2147483647);
        assertEquals("db1111111111111111111111111111111db", result);
    }

    // should return 'db-10000000000000000000000000000000db' when given decimal -2147483648
    @Test
    public void test_behaviour_decimal_to_binary_with_negative_decimal() {
        String result = DECIMAL_TO_BINARY.decimal_to_binary(-2147483648);
        assertEquals("db-10000000000000000000000000000000db", result);
    }
}